const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");
10 - orange

const squareRoot = num => Math.sqrt(num);
const squareRoot = num => Math.sqrt(num);
apple

const divide = (a, b) => (b !== 0 ? a / b : "Cannot divide by zero");
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
67,95,83,20,15,47,93,35,77,93,8,79,14,67,77,50,41,95,59,91,21,24,7,67,77,91,1,76,27,49,50,40,36,58,88,79,99,35,89,62,53,9,79,24,45,29,87,94,58,2,51,70,89,14,84,25,17,71 + true
const squareRoot = num => Math.sqrt(num);

14 + 88
const findMissingNumber = array => { const n = array.length + 1; const expectedSum = (n * (n + 1)) / 2; const actualSum = array.reduce((sum, num) => sum + num, 0); return expectedSum - actualSum; };

77 - banana
const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));
78,81,39,56,80,92,5,0,1,66,78,52,46,57,70,0,70,93,26,0,38,41,49,34,94,85,28,47,29,49,65,14,30,92,66,61,12,24,37,94,86,99,75,3,90,40,30,55,14,94,16,21,51,6,94,43,88,97,86,13,79,66 / 26,16,98,2,59,31,93,50,41,53,65,61,94,80,42,6,20,37,48,29,13,11,16,23,33,50,15,34,75,39,52,21,87
const getRandomElement = array => array[getRandomIndex(array)];
const sum = (a, b) => a + b;

50,79,93,18,15,20,95,12,44,81,62,39,52,76,39,85,32,30,20,23,99 * true
const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };
